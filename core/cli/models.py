import inquirer
from dataclasses import dataclass


@dataclass
class CLInterfaceModels:
    main_menu = [
        inquirer.List(
            name='menu_item',
            message='Main Menu',
            choices=[
                'Launch',
                'Export Info',
                'Generate Wallets',
                'Exit'
            ]
        )
    ]

    launch_storage_menu = [
        inquirer.List(
            name='menu_item',
            message='Where to launch from',
            choices=[
                'Launch DataBase',
                'Add account to database - TXT'
            ]
        )
    ]

    launch_database_menu = [
        inquirer.List(
            name='menu_item',
            message='Wallet selection',
            choices=[
                'All Wallets',
                'Select by filter wallets'
            ]
        )
    ]

    launch_filter_menu = [
        inquirer.Checkbox(
            name='menu_item',
            message='Filter selection <- ->, and press [ENTER]',
            choices=[
                'Check-in failed',
                'No 100 transactions'
            ]
        )
    ]

    export_format_menu = [
        inquirer.List(
            name='menu_item',
            message='Format selection',
            choices=[
                'TXT',
                'Excel'
            ]
        )
    ]

    export_data_menu = [
        inquirer.Checkbox(
            name='menu_item',
            message='Data selection <- ->, and press [ENTER]',
            choices=[
                'From config.py      - –ö–ª—é—á–∏ –∏–∑ config.py? (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é = –¥–∞)',
                'id                  - –ù–æ–º–µ—Ä –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ë–î',
                'address             - –ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ Main',
                'private_key         - –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á',

                'twitter_token       - –¢–≤–∏—Ç—Ç–µ—Ä auth_token',
                'proxy               - –ü—Ä–æ–∫—Å–∏',

                'device_id           - –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∞–∫–∫–∞—É–Ω—Ç–∞',

                'address_particle    - –ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ Particle',
                'invite_code         - –†–µ—Ñ–∫–æ–¥ –∞–∫–∫–∞—É–Ω—Ç–∞',
                
                'refcode             - –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π —Ä–µ—Ñ–∫–æ–¥ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',
                'referrer_address    - –ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—è',

                'check_in            - CheckIn',
                'today_tx            - –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞ 24 —á–∞—Å–∞ Particle',
                'total_tx            - –í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π Particle',
                
                'referral_points     - –ü–æ–∏–Ω—Ç–æ–≤ –∑–∞ —Ä–µ—Ñ–æ–≤',
                'checkin_points      - –ü–æ–∏–Ω—Ç–æ–≤ –∑–∞ CheckIn',
                'deposit_points      - –ü–æ–Ω–∏—Ç–æ–≤ –∑–∞ –¥–µ–ø–æ–∑–∏—Ç',
                'transactions_points - –ü–æ–Ω–∏—Ç–æ–≤ –∑–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏',
                'retweet_points      - –ü–æ–∏–Ω—Ç–æ–≤ –∑–∞ —Ä–µ—Ç–≤–∏—Ç',
                'total_points        - –í—Å–µ–≥–æ –ø–æ–∏–Ω—Ç–æ–≤',

                'ethereum_main       - –ë–∞–ª–∞–Ω—Å Etherium Main',
                'arbitrum_main       - –ë–∞–ª–∞–Ω—Å Arbitrum Main',
                'optimism_main       - –ë–∞–ª–∞–Ω—Å Optimism Main',
                'base_main           - –ë–∞–ª–∞–Ω—Å Base Main',
                'linea_main          - –ë–∞–ª–∞–Ω—Å Linea Main',
                'blast_main          - –ë–∞–ª–∞–Ω—Å Blast Main',
                'polygon_main        - –ë–∞–ª–∞–Ω—Å Polygon Main',
                'bnb_main            - –ë–∞–ª–∞–Ω—Å BNB Main',
                'avalanche_main      - –ë–∞–ª–∞–Ω—Å Avalanche Main',
                'b2network_main      - –ë–∞–ª–∞–Ω—Å B2Network Main',

                'ethereum_particle   - –ë–∞–ª–∞–Ω—Å Etherium Particle',
                'arbitrum_particle   - –ë–∞–ª–∞–Ω—Å Arbitrum Particle',
                'optimism_particle   - –ë–∞–ª–∞–Ω—Å Optimism Particle',
                'base_particle       - –ë–∞–ª–∞–Ω—Å Base Particle',
                'linea_particle      - –ë–∞–ª–∞–Ω—Å Linea Particle',
                'blast_particle      - –ë–∞–ª–∞–Ω—Å Blast Particle',
                'polygon_particle    - –ë–∞–ª–∞–Ω—Å Polygon Particle',
                'bnb_particle        - –ë–∞–ª–∞–Ω—Å BNB Particle',
                'avalanche_particle  - –ë–∞–ª–∞–Ω—Å Avalanche Particle',
                'b2network_particle  - –ë–∞–ª–∞–Ω—Å B2Network Particle',
            ],
            default=[
                'From config.py      - –ö–ª—é—á–∏ –∏–∑ config.py? (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é = –¥–∞)'
            ]
        )
    ]

    enter_thread = [
        inquirer.Text(
            name='enter_item',
            message="üëâ –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ –ø–æ—Ç–æ–∫–æ–≤"
        )
    ]

    enter_count = [
        inquirer.Text(
            name='enter_item',
            message="üëâ –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤"
        )
    ]

    main_logo = {
        'text': 'Particle',
        'font': 'slant',
        'colors': 'LIGHT_MAGENTA'
    }

    launch_logo = {
        'text': 'Launch',
        'font': 'standard',
        'colors': 'CYAN'
    }

    generate_logo = {
        'text': 'Generate',
        'font': 'standard',
        'colors': 'CYAN'
    }

    export_logo = {
        'text': 'Export Info',
        'font': 'standard',
        'colors': 'CYAN'
    }

# COLOR_CODES = {'BLACK': 30, 'RED': 31, 'GREEN': 32, 'YELLOW': 33, 'BLUE': 34, 'MAGENTA': 35, 'CYAN': 36, 'LIGHT_GRAY': 37,
#                'DEFAULT': 39, 'DARK_GRAY': 90, 'LIGHT_RED': 91, 'LIGHT_GREEN': 92, 'LIGHT_YELLOW': 93, 'LIGHT_BLUE': 94,
#                'LIGHT_MAGENTA': 95, 'LIGHT_CYAN': 96, 'WHITE': 97, 'RESET': 0
# }